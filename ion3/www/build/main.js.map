{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/services/database.service.ts","../../src/pages/list/list.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 109;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 109\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 150;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 150\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { Database } from '../../services/database.service';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController, public database: Database) {\n    this.database.connectToDatabaseAndCreateTables().then(() => {\n      this.database.createProject(\"haha\", \"hoho\", \"holead\", \"asdf\").then((result) => {\r\n\r\n        return this.database.getRecoveryKeyForProjectId(result.insertId);\r\n      }).then((result) => {\r\n        let recoveryKey = result.rows.item(0).recoveryKey;\r\n      }).catch(e => {\r\n        // handle error?!\r\n        console.log(\"omg\");\r\n      });\r\n    }).catch((e) => {\n      console.log(\"error!?\");\n    });\n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from '@angular/core';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\n\n@Injectable()\nexport class Database {\n\n  internalLastSqlQueryLog: string;\n\n  errorDuringTableInitialization: Boolean = false;\n\n  options: any = {\n    name: 'data.db',\n    location: 'default',\n    createFromLocation: 1\n  }\n\n  private db: SQLiteObject;\n\n  constructor(private sqlite: SQLite) {\n    //this.connectToDatabaseAndCreateTables();\n  }\n  \n  public connectToDatabaseAndCreateTables() {\n    \n    return this.sqlite.create(this.options)\n      .then((db: SQLiteObject) => {\n        this.db = db;\n      })\n      .then(() => {\n        return this.initalizeDatabase();\n      })\n      .catch(e => {\n        this.internalLastSqlQueryLog += \"Error: \" + JSON.stringify(e)\n      });\n  }\n\n  private createTablesIfNotExisting() {\n\n    let sqlCreateProject = 'CREATE TABLE IF NOT EXISTS project (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255) NOT NULL, creationTimestamp VARCHAR(255) NOT NULL, lastEditTimestamp VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, lead VARCHAR(255) NOT NULL, recoveryKey VARCHAR(255) NOT NULL, projectCode VARCHAR(255));';\n\n    let sqlStaticProjectionGoal = 'CREATE TABLE IF NOT EXISTS static_protectiongoal (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255) NOT NULL);';\n\n    let sqlStaticProjectionGoalQuestions = 'CREATE TABLE IF NOT EXISTS static_protectiongoal_question (id INTEGER PRIMARY KEY AUTOINCREMENT, protectionGoalId INTEGER NOT NULL, question VARCHAR(255) NOT NULL, FOREIGN KEY(protectionGoalId) REFERENCES static_protectiongoal(id));';\n\n    let sqlProjectQuestionAnswer = 'CREATE TABLE IF NOT EXISTS project_question_answer (projectId INTEGER NOT NULL, questionId INTEGER NOT NULL, answer INTEGER NOT NULL, UNIQUE(projectId, questionId), FOREIGN KEY(projectId) REFERENCES project(id), FOREIGN KEY(questionId) REFERENCES static_protectiongoal_question(id));';\n    \n    return this.db.executeSql(sqlCreateProject, {})\n      .then(() => {\n        return this.db.executeSql(sqlStaticProjectionGoal, {})\n      })\n      .then(() => {\n        return this.db.executeSql(sqlStaticProjectionGoalQuestions, {})\n      }).then(() => {\n        return this.db.executeSql(sqlProjectQuestionAnswer, {})\n      }).catch(e => {\n        console.log(\"fehler\");\n      });\n  }\n\n  private checkGoalAndInsertItWhenNotExisting(goal) {\n\n    let selectGoalSql = \"SELECT name FROM static_protectiongoal where name = '\" + goal + \"'\";\n\n    let insertGoalSql = \"INSERT INTO static_protectiongoal (name) VALUES ('\" + goal + \"')\";\n\n    return this.db.executeSql(selectGoalSql, {})\n      .then((result) => {\n        if (result.rows.length == 0)\n          return this.db.executeSql(insertGoalSql, {});\n      }).catch(e => {\n        this.errorDuringTableInitialization = true;\n        this.internalLastSqlQueryLog += \"Error: \" + JSON.stringify(e);\n      });\n  }\n\n  private checkQuestionsForGoalAndAddIfNotExisting(goal, questionsArray) {\n\n    let selectGoalSql = \"SELECT id, name FROM static_protectiongoal where name = '\" + goal + \"'\";\n\n    let selectQuestionSql = \"SELECT question FROM static_protectiongoal_question where question = '\" + questionsArray + \"'\";\n\n    let protectionGoalId = -1;\n\n    return this.db.executeSql(selectGoalSql, {})\n      .then((result) => {\n        if (result.rows.length == 1) {\n          protectionGoalId = result.rows.item(0).id;\n        }\n        return this.db.executeSql(selectQuestionSql, {});\n      }).then((result) => {\n        if (result.rows.length == 0) {\n          // question wasn't found, create it!\n          let insertQuestionSql = \"INSERT INTO static_protectiongoal_question (protectionGoalId, question) VALUES ('\" + protectionGoalId + \"', '\" + questionsArray + \"')\";\n\n          return this.db.executeSql(insertQuestionSql, {});\n\n        } else {\n          // question found, don't add it!\n        }\n\n      }).catch(e => {\n        this.errorDuringTableInitialization = true;\n        this.internalLastSqlQueryLog += \"Error: \" + JSON.stringify(e);\n      });\n  }\n\n  private initalizeDatabase() {\n    \n    this.createTablesIfNotExisting()\n      .then(() => {\n        return this.checkGoalAndInsertItWhenNotExisting(\"Identifizierung & Authentifizierung\")\n      })\n      .then(() => {\n        return this.checkQuestionsForGoalAndAddIfNotExisting(\"Identifizierung & Authentifizierung\", \"Ich bin eine Identifizierungs und Authentifizierungsfrage!\")\n      })\n      .then(() => {\n        return this.checkGoalAndInsertItWhenNotExisting(\"Nutzungskontrolle\")\n      })\n      .then(() => {\n        return this.checkQuestionsForGoalAndAddIfNotExisting(\"Nutzungskontrolle\", \"Ich bin eine Nutzungskontrollefrage!\")\n      })\n      .then(() => {\n        return this.checkQuestionsForGoalAndAddIfNotExisting(\"Nutzungskontrolle\", \"Ich bin eine zweite Nutzungskontrollefrage!\")\n      })\n      .then(() => {\n        return this.checkGoalAndInsertItWhenNotExisting(\"Systemintegrität\")\n      })\n      .then(() => {\n        return this.checkQuestionsForGoalAndAddIfNotExisting(\"Systemintegrität\", \"Ich bin eine Systemintegritätsfrage!\")\n      })\n      .then(() => {\n        return this.checkQuestionsForGoalAndAddIfNotExisting(\"Systemintegrität\", \"Ich bin die zweite Systemintegritätsfrage!\")\n      })\n      .then(() => {\n        return this.checkQuestionsForGoalAndAddIfNotExisting(\"Systemintegrität\", \"Ich bin die dritte Systemintegritätsfrage!\")\n      })\n      .catch(e => {\n        this.errorDuringTableInitialization = true;\n        this.internalLastSqlQueryLog += \"Error: \" + JSON.stringify(e);\n      });\n  }\n  \n  // for testing\n  public dropAllDatabases() {\n\n    let sqlCreateProject = 'DROP TABLE IF EXISTS project;';\n\n    let sqlStaticProjectionGoal = 'DROP TABLE IF EXISTS static_protectiongoal;';\n\n    let sqlStaticProjectionGoalQuestions = 'DROP TABLE IF EXISTS static_protectiongoal_questions;';\n\n    this.db.executeSql(sqlCreateProject, {})\n      .then(() => this.db.executeSql(sqlStaticProjectionGoal, {}))\n      .then(() => this.db.executeSql(sqlStaticProjectionGoalQuestions, {}))\n      .catch(e => {\n        this.errorDuringTableInitialization = true;\n        this.internalLastSqlQueryLog += \"Error: \" + JSON.stringify(e)\n      });\n  }\n\n  public createProject(name, password, lead, projectCode) {\n\n    let recoveryKey = Math.floor(Math.random() * 10);\n    let creationTimestamp = Math.floor(+new Date() * 1000);\n    let sql = \"INSERT INTO project (name, creationTimestamp, lastEditTimestamp, password, lead, recoveryKey, projectCode) VALUES ('\" + name + \"', '\" + creationTimestamp + \"', '\" + creationTimestamp + \"', '\" + password + \"', '\" + lead + \"', '\" + recoveryKey + \"', '\" + projectCode + \"')\";\n\n    return this.db.executeSql(sql, {});\n  }\n\n  public generateRecoveryKeyForProjectId(projectId)\n  {\n    let recoveryKey = Math.floor(Math.random() * 10);\n    let sql = \"UPDATE project SET recoveryKey = \" + recoveryKey + \" WHERE project.id = \" + projectId;\n\n    return this.db.executeSql(sql, {});\n  }\n\n  public getRecoveryKeyForProjectId(projectId) {\n    let sql = \"SELECT recoveryKey FROM project WHERE project.id = \" + projectId;\n\n    return this.db.executeSql(sql, {});\n  }\n\n  public updatePasswordForProject(projectId, password) {\n    let sql = \"UPDATE project SET password = '\" + password + \"' WHERE project.id = \" + projectId;\n    \n    return this.db.executeSql(sql, {});\n  }\n\n  public getPasswordForProject(projectId) {\n    let sql = \"SELECT password FROM project WHERE project.id = \" + projectId;\n\n    return this.db.executeSql(sql, {});\n  }\n\n  public getAllProjects() {\n    let sql = \"SELECT id, name, creationTimestamp, lastEditTimestamp, lead, projectCode FROM project\";\n\n    if (typeof this.db === \"undefined\")\n    {\n      return this.connectToDatabaseAndCreateTables().then(() => {\n        return this.db.executeSql(sql, {});\n      })\n    } else {\n      return this.db.executeSql(sql, {});\n    }\n\n  }\n\n  public clearAllProjects() {\n    let sql = \"DELETE FROM project;\"\n    let sql2 = \"DELETE FROM project_question_answer;\"\n    this.db.executeSql(sql, {})\n      .then(() => this.db.executeSql(sql2, {}))\n      .then(() => this.internalLastSqlQueryLog += \"\\n\" + 'Executed SQL' + sql)\n      .catch(e => this.internalLastSqlQueryLog += \"Error: \" + JSON.stringify(e));\n  }\n\n  public getAllSecurityGoals() {\n    let sql = \"SELECT id, name FROM static_protectiongoal\";\n    return this.db.executeSql(sql, {});\n  }\n\n  public getAllQuestionsForSecurityGoalId(securityGoalId) {\n    let sql = \"SELECT id, question FROM static_protectiongoal_question WHERE protectionGoalId = \" + securityGoalId;\n    return this.db.executeSql(sql, {});\n  }\n\n  public getAllQuestionsForSecurityGoalIdWithAnswers(securityGoalId, projectId) {\n    let sql = \"SELECT static_protectiongoal_question.id, static_protectiongoal_question.question, project_question_answer.answer \" +\n      \"FROM static_protectiongoal_question \" +\n      \"LEFT JOIN project_question_answer ON static_protectiongoal_question.id = project_question_answer.questionId AND project_question_answer.projectId = \" + projectId + \" \" +\n      \"WHERE static_protectiongoal_question.protectionGoalId = \" + securityGoalId; // + \" AND project_question_answer.projectId = \" + projectId;\n    return this.db.executeSql(sql, {});\n  }\n  \n  public getGoalMetadata(securityGoalId, projectId) {\n\n    let questionIds = [];\n\n    return this.getAllQuestionsForSecurityGoalId(securityGoalId).then((result) => {\n\n      let num: number = result.rows.length;\n\n      while (num >= 1) {\n        let question = result.rows.item(num - 1);\n        questionIds.push(question.id);\n        num--;\n      }\n\n    }).then(() => {\n      let questionsQuery = \"(\";\n\n      let num: number = questionIds.length;\n\n      while (num >= 1) {\n        var question = questionIds[num - 1];\n        questionsQuery += (question + \",\");\n        num--;\n      }\n      questionsQuery = questionsQuery.slice(0, -1);\n      questionsQuery += \");\"\n\n      let sql = \"SELECT answer FROM project_question_answer WHERE projectId = \" + projectId + \" AND questionId IN \" + questionsQuery;\n      return this.db.executeSql(sql, {});\n    }).catch(e => {\n        // handle error?!\n      console.log(\"we have error\");\n    });\n    \n  }\n\n  public setAnswerForQuestion(questionId, projectId, answer) {\n\n    let deleteSql = \"DELETE FROM project_question_answer WHERE projectId = \" + projectId + \" AND questionId = \" + questionId;\n\n    let sql = \"INSERT INTO project_question_answer (projectId, questionId, answer) VALUES ('\" + projectId + \"', '\" + questionId + \"', '\" + answer + \"')\";// ON DUPLICATE KEY UPDATE answer = \" + answer;\n\n    let sqlUpdateLastEditedTimestamp = \"UPDATE project SET lastEditTimestamp = '\" + Math.floor(+new Date() * 1000) + \"' WHERE project.id = \" + projectId;\n\n    return this.db.executeSql(deleteSql, {})\n      .then(() => {\n        return this.db.executeSql(sql, {})\n      }).then(() => {\n        return this.db.executeSql(sqlUpdateLastEditedTimestamp, {})\n      });\n  }\n\n  public deleteProjectWithProjectId(projectId) {\n    let sql = \"DELETE FROM project where project.id = \" + projectId;\n    return this.db.executeSql(sql, {});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/database.service.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\n\n@Component({\n  selector: 'page-list',\n  templateUrl: 'list.html'\n})\nexport class ListPage {\n  selectedItem: any;\n  icons: string[];\n  items: Array<{title: string, note: string, icon: string}>;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n    // If we navigated to this page, we will have an item available as a nav param\n    this.selectedItem = navParams.get('item');\n\n    // Let's populate this page with some filler content for funzies\n    this.icons = ['flask', 'wifi', 'beer', 'football', 'basketball', 'paper-plane',\n    'american-football', 'boat', 'bluetooth', 'build'];\n\n    this.items = [];\n    for (let i = 1; i < 11; i++) {\n      this.items.push({\n        title: 'Item ' + i,\n        note: 'This is item #' + i,\n        icon: this.icons[Math.floor(Math.random() * this.icons.length)]\n      });\n    }\n  }\n\n  itemTapped(event, item) {\n    // That's right, we're pushing to ourselves!\n    this.navCtrl.push(ListPage, {\n      item: item\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list/list.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { SQLite } from '@ionic-native/sqlite';\r\nimport { Database } from '../services/database.service';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    ListPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    ListPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    Database,\r\n    SQLite,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: any;\n\n  pages: Array<{title: string, component: any}>;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\n    this.initializeApp();\n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Home', component: HomePage },\n      { title: 'List', component: ListPage }\n    ];\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n      this.nav.setRoot(HomePage);\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}